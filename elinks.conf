## ELinks 0.12pre5 configuration file

## This is ELinks configuration file. You can edit it manually,
## if you wish so; this file is edited by ELinks when you save
## options through UI, however only option values will be altered
## and missing options will be added at the end of file; if option
## is not written in this file, but in some file included from it,
## it is NOT counted as missing. Note that all your formatting,
## own comments and so on will be kept as-is.
##
## Obviously, if you don't like what ELinks is going to do with
## this file, you can change it by altering the config.saving_style
## option. Come on, aren't we friendly guys after all?



##############################
# Automatically saved options
#

## config 
#  Configuration handling options.

  ## config.saving_style_w [0|1]
  #  This is internal option used when displaying a warning about obsolete
  #  config.saving_style. You shouldn't touch it.
  set config.saving_style_w = 1


## ui 
#  User interface options.

  ## ui.language <language>
  #  Language of user interface. 'System' means that the language will be
  #  extracted from the environment dynamically.
  set ui.language = "System"





##################################
# Automatically saved keybindings
#

bind "main" "c" = "cookie-manager"
bind "main" "K" = "keybinding-manager"
bind "main" "k" = "scroll-up"
bind "main" "j" = "scroll-down"
bind "main" "x" = "tab-close"



##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.forms 
    #  Options for handling of the forms interaction.

      ## document.browse.forms.confirm_submit [0|1]
      #  Ask for confirmation when submitting a form.
      set document.browse.forms.confirm_submit = 0

      ## document.browse.forms.insert_mode [0|1]
      #  The setting for this option affects how key presses are handled when
      #  one selects a text-input form-field. When enabled, one must explicitly
      #  'enter' a selected text-field to edit it; this prevents text fields
      #  from capturing key presses, such as presses of a scroll key, when it is
      #  inadvertently selected. When disabled, key presses are always inserted
      #  into a selected text field.
      set document.browse.forms.insert_mode = 1

      ## document.browse.forms.editor <str>
      #  Path to the executable that ELinks should launch when the user requests
      #  to edit a textarea with an external editor.
      #  
      #  If this is blank, ELinks will use the value of the environmental
      #  variable $EDITOR. If $EDITOR is empty or not set, ELinks will then
      #  default to "vi".
      set document.browse.forms.editor = ""

      ## document.browse.forms.show_formhist [0|1]
      #  Ask if a login form should be saved to file or not. This option only
      #  disables the dialog, already saved login forms are unaffected.
      set document.browse.forms.show_formhist = 0


    ## document.browse.search 
    #  Options for searching.

      ## document.browse.search.regex <num>
      #  Enable searching with regular expressions:
      #  0 for plain text searching
      #  1 for basic regular expression searches
      #  2 for extended regular expression searches
      set document.browse.search.regex = 1

      ## document.browse.search.show_hit_top_bottom [0|1]
      #  Whether to show a dialog when the search hits the top or bottom of the
      #  document.
      set document.browse.search.show_hit_top_bottom = 1

      ## document.browse.search.wraparound [0|1]
      #  Wrap around when searching. Currently only used for typeahead.
      set document.browse.search.wraparound = 1

      ## document.browse.search.show_not_found <num>
      #  How to inform the user when nothing is matched:
      #  0 means do nothing
      #  1 means beep the terminal
      #  2 means pop up message box
      set document.browse.search.show_not_found = 2

      ## document.browse.search.typeahead <num>
      #  Start typeahead searching when an unbound key is pressed without any
      #  modifiers. Note that most keys have default bindings, so this feature
      #  will not be useful unless you unbind them.
      #  
      #  0 disables this feature; typeahead searching will only be
      #    used when you press a key bound to search-typeahead or
      #    similar
      #  1 automatically starts typeahead searching thru link text
      #  2 automatically starts typeahead searching thru all document
      #    text
      set document.browse.search.typeahead = 2


    ## document.browse.margin_width <num>
    #  Horizontal text margin.
    set document.browse.margin_width = 3



## ui 
#  User interface options.

  ## ui.tabs 
  #  Window tabs settings.

    ## ui.tabs.top [0|1]
    #  Whether display tab bar at top like other browsers do.
    set ui.tabs.top = 1

    ## ui.tabs.wraparound [0|1]
    #  When moving right from the last tab, jump to the first one, and vice
    #  versa.
    set ui.tabs.wraparound = 1

    ## ui.tabs.confirm_close [0|1]
    #  When closing a tab show confirmation dialog.
    set ui.tabs.confirm_close = 0






##############################
# Automatically saved options
#

## ui 
#  User interface options.

  ## ui.colors 
  #  Default user interface color settings.

    ## ui.colors.color 
    #  Color settings for color terminal.

      ## ui.colors.color.status 
      #  Status bar colors.

        ## ui.colors.color.status.status-bar 
        #  Generic status bar colors.

          ## ui.colors.color.status.status-bar.text <color|#rrggbb>
          #  Default text color.
          set ui.colors.color.status.status-bar.text = "black"



      ## ui.colors.color.searched 
      #  Searched string highlight colors.

        ## ui.colors.color.searched.text <color|#rrggbb>
        #  Default text color.
        set ui.colors.color.searched.text = "red"








##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.links 
    #  Options for handling of links to other documents.

      ## document.browse.links.numbering [0|1]
      #  Display numbers next to the links.
      set document.browse.links.numbering = 1



  ## document.colors 
  #  Default document color settings.

    ## document.colors.use_document_colors <num>
    #  Use colors specified in document:
    #  0 is use always the default settings
    #  1 is use document colors if available, except background
    #  2 is use document colors, including background. This can
    #    mostly look very impressive, but some sites will appear
    #    really ugly. Note, that obviously if the background is
    #    not black, it will break the behaviour of transparency.
    set document.colors.use_document_colors = 1






##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.accesskey 
    #  Options for handling of link access keys. An HTML document can use the
    #  ACCESSKEY attribute to assign an access key to an element. When an access
    #  key is pressed, the corresponding element will be given focus.

      ## document.browse.accesskey.auto_follow [0|1]
      #  Automatically follow a link or submit a form if appropriate accesskey
      #  is pressed - this is the standard behaviour, but it's considered
      #  dangerous.
      set document.browse.accesskey.auto_follow = 1




